pipeline {
    agent any

    environment {
        APP_NAME = readMavenPom().getArtifactId()
        APP_VERSION = readMavenPom().getVersion()
    }

    stages {

        stage('deploy') {
            steps {
                    withCredentials([sshUserPrivateKey(credentialsId: 'la-cloud-user-ssh-login', keyFileVariable: 'KEY', usernameVariable: 'USERNAME', passphraseVariable: 'PASSPHRASE' )]) {
                        sh '''
                        APP_VERSION=\$(cat pom.xml | grep version | head -2 | awk -F'[<>]' '/version/ {print $3}')
                        sed -i "s/TEXT set_app_version/TEXT $APP_VERSION/" /weather-app-deployment.yaml
                        scp -o StrictHostKeyChecking=no -i ~/.ssh/kube-ssh-key/id_rsa *.yaml "$USERNAME"@54.170.14.41:~/
                        ssh -i ~/.ssh/kube-ssh-key/id_rsa "$USERNAME"@3.250.97.72 << EOF
                        ls -la
                        pwd
                        kubectl apply -f weather-app-deployment.yaml
                        kubectl apply -f weather-app-service.yaml
                        'EOF'
                        '''
                    }
            }
        }
    }
}

// scp -o StrictHostKeyChecking=no -i ~/.ssh/terraform2.pem target/weather-app-0.0.1-SNAPSHOT.jar ec2-user@$BLUE_BOX_IP:/tmp
// dir (scripts) = command used to access content in a dir called script
// ./set_app_version.sh = shell script to update deployment.yaml file with app version number
